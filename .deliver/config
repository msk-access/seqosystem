APP="seqosystem"

AUTO_VERSION="commit-count+git-revision+branch-unless-master"
USING_DISTILLERY=true

BUILD_HOST="pi-test"
BUILD_USER="voyager"
BUILD_AT="/juno/work/seqosystem/temp/builds"
RELEASE_STORE=voyager@voyager:/srv/services/seqosystem/release

MAIN_APP="$BUILD_AT/apps/voyager" # App to be deployed

STAGING_HOSTS="silo"
STAGING_USER="voyager"
DELIVER_TO="/home/deploy"

PRODUCTION_HOSTS="voyager"
PRODUCTION_USER="voyager"
DELIVER_TO="/srv/services/seqosystem/deploy"

pre_erlang_get_and_update_deps() {
  local _prod_secret_path="/juno/work/seqosystem/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    __sync_remote "
      ln -sfn '$_prod_secret_path' '$BUILD_AT/config/prod.secret.exs'
    "
  fi
}

pre_erlang_clean_compile() {
  status "Installing NPM dependencies"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$MAIN_APP/assets'
    npm install
  "

  status "Building static files"
  __sync_remote "
      [ -f ~/.profile ] && source ~/.profile
      set -e

      cd '$MAIN_APP'
      mkdir -p priv/static
      cd '$MAIN_APP/assets'
      npm run deploy
   "

  status "Running phx.digest"
  __sync_remote "
    [ -f ~/.profile ] && source ~/.profile
    set -e

    cd '$BUILD_AT'
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phx.digest $SILENCE
    echo '$APP'
    echo '$REPLACE_OS_VARS'
    echo '$TARGET_MIX_ENV'
  "
}

